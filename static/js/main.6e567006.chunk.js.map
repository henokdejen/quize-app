{"version":3,"sources":["Components/QuestionTitle.js","Components/Constants.js","Components/Choice.js","Components/Choices.js","Components/ActionZone.js","Components/AnswerDescriptio.js","Components/QuizeBody.js","Components/Timer.js","Components/Header.js","Models/Questions.js","App.js","serviceWorker.js","index.js"],"names":["QuestionTitle","props","questionTitle","index","ChoiceType","PresentationMode","ask","check","TimerType","Choice","isSelected","choiceText","correct","className","mode","onClick","onChoiceSelected","Choices","choices_list","answersList","selectedIndexes","map","a_choice","includes","key","ActionZone","flipPresentatonMode","type","AnswerDescription","desc","QuizeBody","state","bind","newIndexes","choiceType","this","question","filter","ind","slice","push","console","log","setState","length","onAQuestionFinished","notification","error","message","description","choicesList","answerDesc","md","xs","lg","sm","React","Component","Timer","initialDuration","duration","timerId","setInterval","tick","clearInterval","onElapsed","timerType","CircularCountDown","NormalCountDown","percent","format","width","numberOfSecs","minutes","Math","floor","seconds","formatDurationIntoMinutes","Header","quizeTitle","currentQuestionNumber","totalNumberOfQuestions","correctAnswersCount","wrongAnswersCount","progressPercent","gutter","showInfo","App","currentIndex","wrong","isCorrect","updateField","currentQuestion","questions","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6e567006.chunk.js","sourcesContent":["import React from 'react'\n\nexport default function QuestionTitle(props) {\n    const { questionTitle, index } = props\n\n    return (\n        <div>{index + \", \" + questionTitle}</div>\n    )\n}","export const ChoiceType = {\n    sn: 'single',\n    ml: 'multiple'\n}\n\nexport const PresentationMode = {\n    ask: 'ask',\n    check: 'check'\n}\n\nexport const TimerType = {\n    normal: 0,\n    circular: 1\n}","import React from 'react'\nimport { PresentationMode } from './Constants'\n\nconst Choice = props => {\n    // const onSelected = this.onSelected.bind(this)\n\n    const onSelected = () => {\n        if (props.mode !== PresentationMode.check) {\n            props.onChoiceSelected(props.index)\n        }\n    }\n    const { isSelected, choiceText, correct, mode } = props\n    let className = \"choice-item \"\n\n    if (mode === PresentationMode.check) className += correct ? 'choice-item-correct' : isSelected ? 'choice-item-wrong' : 'choice-item-unselected'\n    else className += isSelected ? 'choice-item-selected' : 'choice-item-unselected'\n\n    const content = (\n        <div onClick={onSelected} className={className} >\n            {choiceText}\n        </div>\n    )\n\n    return content\n}\n\nexport default Choice\n","import React from 'react'\n\nimport Choice from './Choice'\n\nexport default function Choices(props) {\n\n    const { choices_list, mode, answersList, onChoiceSelected, selectedIndexes } = props\n\n    return (\n        <div>\n            {choices_list.map((a_choice, index) => {\n                return (\n                    <Choice\n                        isSelected={selectedIndexes.includes(index)}\n                        choiceText={a_choice}\n                        correct={answersList.includes(index)}\n                        mode={mode}\n                        index={index}\n                        onChoiceSelected={onChoiceSelected}\n                        key={index} />\n                )\n            })}\n\n        </div>\n    )\n}","import React from 'react'\nimport Button from 'antd/es/button';\n\nimport {PresentationMode} from './Constants'\n\nexport default function ActionZone(props) {\n    const {mode, flipPresentatonMode} = props;\n    return (\n        <div className = \"action-zone\">\n            <Button type=\"primary\" onClick = {flipPresentatonMode}> {mode === PresentationMode.ask ? 'Check' : 'Continue'} </Button>\n        </div>\n    )\n}","import React from 'react'\n\nexport default function AnswerDescription(props) {\n    const {desc} = props\n    return (\n        <div>\n            {desc}\n        </div>\n    )\n}","import React from 'react'\n\nimport QuestionTitle from './QuestionTitle'\nimport Choices from './Choices'\nimport { PresentationMode, ChoiceType } from './Constants'\nimport ActionZone from './ActionZone'\nimport AnswerDescription from './AnswerDescriptio'\nimport { Row, Col,notification } from 'antd'\n\nexport default class QuizeBody extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            selectedIndexes: [],\n            mode: PresentationMode.ask\n        }\n\n        this.onChoiceSelected = this.onChoiceSelected.bind(this)\n        this.flipPresentatonMode = this.flipPresentatonMode.bind(this)\n    }\n\n\n    onChoiceSelected(index) {\n\n        // default choice - single choice\n        let newIndexes = [index]\n\n        const { choiceType } = this.props.question\n\n        if (this.state.selectedIndexes.includes(index)) {\n            newIndexes = this.state.selectedIndexes.filter(ind => ind !== index)\n        }\n        else if (choiceType === ChoiceType.ml) {\n            newIndexes = this.state.selectedIndexes.slice()\n            newIndexes.push(index)\n            console.log(\"here\")\n        }\n\n        this.setState({\n            selectedIndexes: newIndexes\n        })\n    }\n\n    flipPresentatonMode() {\n\n        if (this.state.mode === PresentationMode.ask && this.state.selectedIndexes.length === 0) {\n            notification.error({\n                message: 'Erorr',\n                description:\n                    'please select ',\n                onClick: () => {\n                    console.log('Notification Clicked!');\n                },\n            });\n\n            return\n        }\n\n        // on Flip\n        this.setState(\n            (state) => {\n                if (state.mode === PresentationMode.ask) return { mode: PresentationMode.check }\n                return { mode: PresentationMode.ask, selectedIndexes: [] }\n            },\n            () => {\n                if (this.state.mode === PresentationMode.ask) {\n                    this.props.onAQuestionFinished(true)\n                }\n            }\n        )\n    }\n\n\n    render() {\n        const { questionTitle, choicesList, choiceType, answersList, answerDesc } = this.props.question\n        const { index } = this.props\n\n        return (\n            <div>\n                <div>\n                    <Row className=\"quize-body\">\n                        <Col md={1} xs={1} lg={4} sm={1} />\n                        <Col md={22} lg={16} xs={22} sm={22}>\n                            <QuestionTitle questionTitle={questionTitle} index={index + 1} />\n                            <Choices\n                                choices_list={choicesList}\n                                mode={this.state.mode}\n                                answersList={answersList}\n                                choiceType={choiceType}\n                                selectedIndexes={this.state.selectedIndexes}\n                                onChoiceSelected={this.onChoiceSelected}\n                            />\n\n                            {\n                                (this.state.mode === PresentationMode.check) && <AnswerDescription desc={answerDesc} />\n                            }\n                        </Col>\n                        <Col md={1} xs={1} lg={4} sm={1} />\n                    </Row>\n\n\n                    <ActionZone mode={this.state.mode} flipPresentatonMode={this.flipPresentatonMode} />\n                </div>\n            </div>\n        )\n    }\n}","import React from 'react'\nimport { Progress } from 'antd';\nimport { TimerType } from './Constants'\n// expects onTimerFinishe, duration in sec\n\nexport default class Timer extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.initialDuration = this.props.duration\n    this.state = {\n      duration: this.props.duration,\n    }\n  }\n\n  componentDidMount() {\n    if (this.state.duration > 0) {\n      this.timerId = setInterval(() => this.tick(), 1000)\n    }\n  }\n\n  componentWillMount() {\n    clearInterval(this.timerId)\n  }\n\n  tick() {\n    this.setState((state) => ({\n      duration: state.duration - 1\n    }), () => {\n      if (this.state.duration === 0) {\n        clearInterval(this.timerId)\n        this.props.onElapsed()\n      }\n    });\n  }\n\n  render() {\n    const { duration } = this.state\n    const { timerType } = this.props\n\n    console.log(duration)\n    return (\n      (timerType === TimerType.circular) ?\n        <CircularCountDown\n          duration={duration}\n          initialDuration={this.initialDuration} /> :\n        <NormalCountDown\n          duration={duration} />\n    )\n  }\n}\n\n\nfunction CircularCountDown(props) {\n  const { duration, initialDuration } = props\n\n  console.log(duration, initialDuration)\n  return (\n    <Progress \n    type=\"circle\" \n    percent={(initialDuration - duration) / initialDuration * 100} \n    format = {() => duration}\n    width = \"200px\"\n    />\n  )\n}\n\nfunction NormalCountDown(props) {\n  const formatDurationIntoMinutes = (numberOfSecs) => {\n    const minutes = Math.floor(numberOfSecs / 60)\n    const seconds = numberOfSecs % 60\n    return (minutes < 10 ? \"0\" : \"\") + minutes + \":\" + (seconds < 10 ? \"0\" : \"\") + seconds\n  }\n\n  const { duration } = props\n  return (\n    <span>{duration === 0 ? <span>Busted!</span> : formatDurationIntoMinutes(duration)}</span>\n  )\n}\n\n\n","import React from 'react'\n\nimport { Progress, Row, Col } from 'antd';\nimport Timer from './Timer'\n\n\nexport default function Header(props) {\n    const { quizeTitle, currentQuestionNumber, totalNumberOfQuestions, correctAnswersCount, wrongAnswersCount } = props\n    const progressPercent = currentQuestionNumber * 100 / totalNumberOfQuestions\n    return (\n        <div className=\"page-header\">\n\n            <Row gutter={[{ xs: 8, sm: 16, md: 24, lg: 32 }, 20]}>\n                <Col className=\"gutter-row\" lg={8} md = {24}>\n                        <span className=\"page-time\">{quizeTitle}</span>\n                </Col>\n                <Col className=\"gutter-row\" lg={4} md = {12}>\n                    <div className=\"gutter-box\">\n                        <Progress percent={progressPercent} showInfo = {false}/> {currentQuestionNumber + \"/\" + totalNumberOfQuestions}\n                    </div>\n                </Col>\n                <Col className=\"gutter-row\" lg={4} md = {12}>\n                        <Timer duration={140} />\n                </Col>\n                <Col className=\"gutter-row\" lg={8} md = {24}>\n                        Correct: {correctAnswersCount}   Wrong: {wrongAnswersCount}\n                </Col>\n            </Row>\n        </div>\n    )\n}","import { ChoiceType } from '../Components/Constants'\n\nexport default [\n    {\n        questionTitle: \"How many types of proton environment are present for benzene ?\",\n        choicesList: [\n            \"3\",\n            \"2\",\n            \"1\"\n        ],\n        answersList: [1],\n        choiceType: ChoiceType.sn,\n        answerDesc: \"Benzene has one environment on it's own and another for the H atoms attached to it.\"\n    },\n    {\n        questionTitle: \"What is the characteristic spin (I) of 1H?\",\n        choicesList: [\n            \"1/2\",\n            \"3/2\",\n            \"5/2\"\n        ],\n        answersList: [0],\n        choiceType: ChoiceType.sn,\n        answerDesc: \"Theory based\"\n    },\n    {\n        questionTitle: \" Which values can a nuclear spin quantum number have?\",\n        choicesList: [\n            \"0\",\n            \"5/3\",\n            \"6/7\"\n        ],\n        answersList: [1],\n        choiceType: ChoiceType.sn,\n        answerDesc: \"Theory based\"\n    },\n    {\n        questionTitle: \"NMR spectroscopy is used for determining structure in which of the following materials?\",\n        choicesList: [\n            \"Radioactive materials\",\n            \"Liquids\",\n            \"Gases\"\n        ],\n        answersList: [1],\n        choiceType: ChoiceType.sn,\n        answerDesc: \"NMR spectroscopy is used for determining structure in liquids. It is also used for determining the structure in soluble chemical compounds.\"\n    },\n    {\n        questionTitle: \"NMR is the study of absorption of __________ by nuclei in a magnetic field?\",\n        choicesList: [\n            \"Radioactive radiation\",\n            \"Radiofroquency radiation\",\n            \"Microwaves\"\n        ],\n        answersList: [1],\n        choiceType: ChoiceType.sn,\n        answerDesc: \"NMR is the study of absorption of radio frequency radiation by nuclei in a magnetic field. For a particular nucleus an NMR absorption spectrum may consist of one to several groups of absorption lines.\"\n    },\n    {\n        questionTitle: \"NMR spectrometer provides ____________ and _____________ method of determining structure in soluble chemical compounds.\",\n        choicesList: [\n            \"Accurate,Destructive\",\n            \"Accurate,Non-Destructive\",\n            \"Inaccurate,Destructive\"\n        ],\n        answersList: \"Accurate,Non-Destructive\",\n        choiceType: ChoiceType.sn,\n        answerDesc: \"NMR spectrometer provides accurate and non-destructive method of determining structure in soluble chemical compounds.\"\n    },\n    {\n        questionTitle: \"NMR spectroscopy indicates the chemical nature of the __________ and spatial positions of________\",\n        choicesList: [\n            \"Protons,Neutrons\",\n            \"Nuclues,Electrons\",\n            \"Nucleus,Neighbouring Nuclei\"\n        ],\n        answersList: [2],\n        choiceType: ChoiceType.sn,\n        answerDesc: \"NMR spectroscopy indicates the chemical nature of the nuclei and spatial positions of neighbouring nuclei.\"\n    },\n    {\n        questionTitle: \"In NMR spectroscopy, the spinning nuclei in strong magnetic field must be irradiated by which of the following?\",\n        choicesList: [\n            \"Perpendicular and strong field\",\n            \"Perpendicular and weak field\",\n            \"Parallel and strong field\"\n        ],\n        answersList: [1],\n        choiceType: ChoiceType.sn,\n        answerDesc: \"Theory\"\n    },\n    {\n        questionTitle: \"Elementary particles such as electrons and nucleus have the property of spin.\",\n        choicesList: [\n            \"True\",\n            \"Flase\",\n            \"None of the above\"\n        ],\n        answersList: [0],\n        choiceType: ChoiceType.sn,\n        answerDesc: \"Theory\"\n    },\n    {\n        questionTitle: \"The difference between the field necessary for resonance in the sample and in some arbitrary chosen compound is which of the following?\",\n        choicesList: [\n            \"Resonanace Shift\",\n            \"Chemical Shift\",\n            \"Matrix effect\"\n        ],\n        answersList: [1],\n        choiceType: ChoiceType.sn,\n        answerDesc: \"Theory\"\n    },\n    {\n        questionTitle: \"What are the units of chemical shift?\",\n        choicesList: [\n            \"ppm\",\n            \"km\",\n            \"m/sec\"\n        ],\n        answersList: [0],\n        choiceType: ChoiceType.sn,\n        answerDesc: \"Theory\"\n    },\n    {\n        questionTitle: \"O2 has which spin?\",\n        choicesList: [\n            \"Integral\",\n            \"Half Integral\",\n            \"Zero\"\n        ],\n        answersList: [2],\n        choiceType: ChoiceType.sn,\n        answerDesc: \"Number of protons=Number of Neutrons\"\n    },\n    {\n        questionTitle: \"The amount of energy available in radio frequency radiation is sufficient for which of the following?\",\n        choicesList: [\n            \"Excite an atom\",\n            \"Vibrate an atom\",\n            \"Affect the nuclear spin of an atom\"\n        ],\n        answersList: [2],\n        choiceType: ChoiceType.sn,\n        answerDesc: \"The amount of energy available in radio frequency radiation is sufficient for affecting the nuclear spin of an atom. It constitute the most fundamental part of spectroscopy.\"\n    },\n    {\n        questionTitle: \"Which waves does NMR use for detection of structure of substances?\",\n        choicesList: [\n            \"Microwaves\",\n            \"UV radiation\",\n            \"Radio Waves\"\n        ],\n        answersList: [2],\n        choiceType: ChoiceType.sn,\n        answerDesc: \"As radio waves are the lowest form of EM waves, they are used in NMR.\"\n    },\n    {\n        questionTitle: \"When energy is absorbed by the sample, the absorption can be observed as a change in signal developed by which of the following components?\",\n        choicesList: [\n            \"Amplifier\",\n            \"Radio frequency Detector\",\n            \"Photon Detector\"\n        ],\n        answersList: [1],\n        choiceType: ChoiceType.sn,\n        answerDesc: \"When energy is absorbed by the sample, the absorption can be observed as a change in signal developed by radiofrequency detector. It is then given to an amplifier.\"\n    },\n    {\n        questionTitle: \"What is the formula of acetaldehyde?\",\n        choicesList: [\n            \"C2H4O\",\n            \"C3H6O\",\n            \"C7H6O\"\n        ],\n        answersList: [0],\n        choiceType: ChoiceType.sn,\n        answerDesc: \"Theory\"\n    },\n    {\n        questionTitle: \"What are the units on X-axis of the graph in the experiment?\",\n        choicesList: [\n            \"Hz\",\n            \"ppm\",\n            \"m\"\n        ],\n        answersList: [1],\n        choiceType: ChoiceType.sn,\n        answerDesc: \"Theory\"\n    },\n]","import React, { Component } from 'react';\nimport './App.css';\n\nimport QuizeBody from './Components/QuizeBody'\nimport Header from './Components/Header'\nimport questions from './Models/Questions'\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      currentIndex: 0,\n      correct: 0,\n      wrong: 0\n    }\n\n    this.onAQuestionFinished = this.onAQuestionFinished.bind(this)\n  }\n\n  onSelected(index) {\n    console.log('I am selected')\n  }\n\n  onAQuestionFinished(isCorrect) {\n    const updateField = isCorrect ? 'correct' : 'wrong'\n    this.setState(\n      (state) => ({\n        currentIndex: state.currentIndex + 1,\n        updateField: state[updateField] + 1\n      })\n    )\n  }\n\n  render() {\n    const {currentIndex,correct, wrong} = this.state\n    const currentQuestion = questions[currentIndex]\n\n    return (\n      <div className=\"App\">\n        <Header\n          quizeTitle={currentQuestion.questionTitle}\n          currentQuestionNumber={currentIndex + 1}\n          totalNumberOfQuestions={questions.length} \n          correctAnswersCount = {correct}\n          wrongAnswersCount = {wrong}\n          />\n\n        <QuizeBody\n          index={currentIndex}\n          onAQuestionFinished={this.onAQuestionFinished}\n          question={currentQuestion} />\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
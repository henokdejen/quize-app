{"version":3,"sources":["Components/QuestionTitle.js","Components/Constants.js","Components/Choice/Choice.js","Components/Choices.js","Components/ActionZone.js","Components/AnswersDescription/AnswerDescriptio.js","Components/QuizeBody/QuizeBody.js","Components/Timer.js","Models/Questions.js","Components/QuizeGeneralInfo/QuizeCategory.js","pages/quizzeses.js","App.js","serviceWorker.js","index.js"],"names":["Title","Typography","QuestionTitle","props","questionTitle","index","level","ChoiceType","PresentationMode","ask","check","TimerType","Choice","isSelected","choiceText","correct","className","mode","onClick","onChoiceSelected","Choices","choices_list","answersList","selectedIndexes","map","a_choice","includes","key","ActionZone","flipPresentatonMode","type","AnswerDescription","answers","desc","React","Component","CircularCountDown","duration","initialDuration","percent","format","width","NormalCountDown","numberOfSecs","minutes","Math","floor","seconds","formatDurationIntoMinutes","quize","title","questions","choicesList","choiceType","answerDesc","Meta","Card","QuizeCategory","imageUrl","numberOfQuizes","onSelected","style","cover","src","alt","hoverable","description","QuizzesList","border","element","App","state","currentIndex","wrong","onAQuestionFinished","bind","quizes","console","log","isCorrect","updateField","this","length","setState","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.abffebcb.chunk.js","sourcesContent":["import React from 'react'\n\nimport { Typography } from 'antd';\n\nconst { Title } = Typography;\n\nexport default function QuestionTitle(props) {\n    const { questionTitle, index } = props\n\n    return (\n        <Title level={4}>{index + \", \" + questionTitle}\n        </Title>\n    )\n}","export const ChoiceType = {\n    sn: 'single',\n    ml: 'multiple'\n}\n\nexport const PresentationMode = {\n    ask: 'ask',\n    check: 'check'\n}\n\nexport const TimerType = {\n    normal: 0,\n    circular: 1\n}","import React from 'react'\nimport { PresentationMode } from '../Constants'\n\nimport './choice.css'\n\nconst Choice = props => {\n    // const onSelected = this.onSelected.bind(this)\n\n    const onSelected = () => {\n        if (props.mode !== PresentationMode.check) {\n            props.onChoiceSelected(props.index)\n        }\n    }\n    const { isSelected, choiceText, correct, mode } = props\n    let className = \"choice-item \"\n\n    if (mode === PresentationMode.check) className += correct ? 'choice-item-correct' : isSelected ? 'choice-item-wrong' : 'choice-item-unselected'\n    else className += isSelected ? 'choice-item-selected' : 'choice-item-unselected'\n\n    const content = (\n        <div onClick={onSelected} className={className} >\n            {choiceText}\n        </div>\n    )\n\n    return content\n}\n\nexport default Choice\n","import React from 'react'\n\nimport Choice from './Choice/Choice'\n\nexport default function Choices(props) {\n\n    const { choices_list, mode, answersList, onChoiceSelected, selectedIndexes } = props\n\n    return (\n        <div>\n            {choices_list.map((a_choice, index) => {\n                return (\n                    <Choice\n                        isSelected={selectedIndexes.includes(index)}\n                        choiceText={a_choice}\n                        correct={answersList.includes(index)}\n                        mode={mode}\n                        index={index}\n                        onChoiceSelected={onChoiceSelected}\n                        key={index} />\n                )\n            })}\n\n        </div>\n    )\n}","import React from 'react'\nimport Button from 'antd/es/button';\n\nimport {PresentationMode} from './Constants'\n\nexport default function ActionZone(props) {\n    const {mode, flipPresentatonMode} = props;\n    return (\n        <div className = \"action-zone\">\n            <Button type=\"primary\" onClick = {flipPresentatonMode}> {mode === PresentationMode.ask ? 'Check' : 'Continue'} </Button>\n        </div>\n    )\n}","import React from 'react'\nimport { Typography } from 'antd';\n\nimport './answersDescription.css'\n\nconst { Title } = Typography;\n\nexport default function AnswerDescription(props) {\n    const {answers, desc} = props\n    return (\n        <div className = \"answer_wrapper\">\n            <Title level = {4}> Answer: </Title>\n            {answers}\n\n            <Title level = {4}> Description: </Title>\n            {desc}\n        </div>\n    )\n}","import React from 'react'\n\nimport QuestionTitle from '../QuestionTitle'\nimport Choices from '../Choices'\nimport { PresentationMode, ChoiceType } from '../Constants'\nimport ActionZone from '../ActionZone'\nimport AnswerDescription from '../AnswersDescription/AnswerDescriptio'\nimport { Row, Col,notification } from 'antd'\n\nimport './quizeBody.css'\n\nexport default class QuizeBody extends React.Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            selectedIndexes: [],\n            mode: PresentationMode.ask\n        }\n\n        this.onChoiceSelected = this.onChoiceSelected.bind(this)\n        this.flipPresentatonMode = this.flipPresentatonMode.bind(this)\n    }\n\n\n    onChoiceSelected(index) {\n\n        // default choice - single choice\n        let newIndexes = [index]\n\n        const { choiceType } = this.props.question\n\n        if (this.state.selectedIndexes.includes(index)) {\n            newIndexes = this.state.selectedIndexes.filter(ind => ind !== index)\n        }\n        else if (choiceType === ChoiceType.ml) {\n            newIndexes = this.state.selectedIndexes.slice()\n            newIndexes.push(index)\n            console.log(\"here\")\n        }\n\n        this.setState({\n            selectedIndexes: newIndexes\n        })\n    }\n\n    flipPresentatonMode() {\n\n        if (this.state.mode === PresentationMode.ask && this.state.selectedIndexes.length === 0) {\n            notification.error({\n                message: 'Erorr',\n                description:\n                    'please select ',\n                onClick: () => {\n                    console.log('Notification Clicked!');\n                },\n            });\n\n            return\n        }\n\n        if (this.state.mode === PresentationMode.check){\n            var isCorrect = this.props.question.answersList[0] == this.state.selectedIndexes[0]\n        }\n        \n        // on Flip\n        this.setState(\n            (state) => {\n                if (state.mode === PresentationMode.ask) return { mode: PresentationMode.check }\n                return { mode: PresentationMode.ask, selectedIndexes: [] }\n            },\n            () => {\n                if (this.state.mode === PresentationMode.ask) {\n                    this.props.onAQuestionFinished(isCorrect)\n                }\n            }\n        )\n    }\n\n    areSimilar(arr1, arr2){\n        if (arr1.length === arr2.length) {\n            for (let element in arr1) {\n                if (!(arr2.includes(element))) return false\n            }\n            return true\n        }\n        return false\n    }\n\n\n    render() {\n        const { questionTitle, choicesList, choiceType, answersList, answerDesc } = this.props.question\n        const { index } = this.props\n\n        const answers = answersList.map(answer => choicesList[answer])\n        return (\n            <div>\n                <div>\n                    <Row className=\"quize-body\">\n                        <Col md={1} xs={1} lg={5} sm={1} />\n                        <Col md={22} lg={14} xs={22} sm={22}>\n                            <QuestionTitle questionTitle={questionTitle} index={index + 1} />\n                            <Choices\n                                choices_list={choicesList}\n                                mode={this.state.mode}\n                                answersList={answersList}\n                                choiceType={choiceType}\n                                selectedIndexes={this.state.selectedIndexes}\n                                onChoiceSelected={this.onChoiceSelected}\n                            />\n\n                            {\n                                (this.state.mode === PresentationMode.check) && <AnswerDescription desc={answerDesc} answers = {answers}/>\n                            }\n                        </Col>\n                        <Col md={1} xs={1} lg={5} sm={1} />\n                    </Row>\n\n\n                    <ActionZone mode={this.state.mode} flipPresentatonMode={this.flipPresentatonMode} />\n                </div>\n            </div>\n        )\n    }\n}","import React from 'react'\nimport { Progress } from 'antd';\nimport { TimerType } from './Constants'\n// expects onTimerFinishe, duration in sec\n\nexport default class Timer extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.initialDuration = this.props.duration\n    this.state = {\n      duration: this.props.duration,\n    }\n  }\n\n  componentDidMount() {\n    if (this.state.duration > 0) {\n      this.timerId = setInterval(() => this.tick(), 1000)\n    }\n  }\n\n  componentWillMount() {\n    clearInterval(this.timerId)\n  }\n\n  tick() {\n    this.setState((state) => ({\n      duration: state.duration - 1\n    }), () => {\n      if (this.state.duration === 0) {\n        clearInterval(this.timerId)\n        this.props.onElapsed()\n      }\n    });\n  }\n\n  render() {\n    const { duration } = this.state\n    const { timerType } = this.props\n\n    return (\n      (timerType === TimerType.circular) ?\n        <CircularCountDown\n          duration={duration}\n          initialDuration={this.initialDuration} /> :\n        <NormalCountDown\n          duration={duration} />\n    )\n  }\n}\n\n\nfunction CircularCountDown(props) {\n  const { duration, initialDuration } = props\n\n  return (\n    <Progress \n    type=\"circle\" \n    percent={(initialDuration - duration) / initialDuration * 100} \n    format = {() => duration}\n    width = \"200px\"\n    />\n  )\n}\n\nfunction NormalCountDown(props) {\n  const formatDurationIntoMinutes = (numberOfSecs) => {\n    const minutes = Math.floor(numberOfSecs / 60)\n    const seconds = numberOfSecs % 60\n    return (minutes < 10 ? \"0\" : \"\") + minutes + \":\" + (seconds < 10 ? \"0\" : \"\") + seconds\n  }\n\n  const { duration } = props\n  return (\n    <span>{duration === 0 ? <span>Busted!</span> : formatDurationIntoMinutes(duration)}</span>\n  )\n}\n\n\n","import { ChoiceType } from '../Components/Constants'\n\nexport default {\n    quize: {\n        title: \"Chemistry Quize\",\n        questions:[\n            {\n                questionTitle: \"How many types of proton environment are present for benzene ?\",\n                choicesList: [\n                    \"3\",\n                    \"2\",\n                    \"1\"\n                ],\n                answersList: [1],\n                choiceType: ChoiceType.sn,\n                answerDesc: \"Benzene has one environment on it's own and another for the H atoms attached to it.\"\n            },\n            {\n                questionTitle: \"What is the characteristic spin (I) of 1H?\",\n                choicesList: [\n                    \"1/2\",\n                    \"3/2\",\n                    \"5/2\"\n                ],\n                answersList: [0],\n                choiceType: ChoiceType.sn,\n                answerDesc: \"Theory based\"\n            },\n            {\n                questionTitle: \" Which values can a nuclear spin quantum number have?\",\n                choicesList: [\n                    \"0\",\n                    \"5/3\",\n                    \"6/7\"\n                ],\n                answersList: [1],\n                choiceType: ChoiceType.sn,\n                answerDesc: \"Theory based\"\n            },\n            {\n                questionTitle: \"NMR spectroscopy is used for determining structure in which of the following materials?\",\n                choicesList: [\n                    \"Radioactive materials\",\n                    \"Liquids\",\n                    \"Gases\"\n                ],\n                answersList: [1],\n                choiceType: ChoiceType.sn,\n                answerDesc: \"NMR spectroscopy is used for determining structure in liquids. It is also used for determining the structure in soluble chemical compounds.\"\n            },\n            {\n                questionTitle: \"NMR is the study of absorption of __________ by nuclei in a magnetic field?\",\n                choicesList: [\n                    \"Radioactive radiation\",\n                    \"Radiofroquency radiation\",\n                    \"Microwaves\"\n                ],\n                answersList: [1],\n                choiceType: ChoiceType.sn,\n                answerDesc: \"NMR is the study of absorption of radio frequency radiation by nuclei in a magnetic field. For a particular nucleus an NMR absorption spectrum may consist of one to several groups of absorption lines.\"\n            },\n            {\n                questionTitle: \"NMR spectrometer provides ____________ and _____________ method of determining structure in soluble chemical compounds.\",\n                choicesList: [\n                    \"Accurate,Destructive\",\n                    \"Accurate,Non-Destructive\",\n                    \"Inaccurate,Destructive\"\n                ],\n                answersList: [1],\n                choiceType: ChoiceType.sn,\n                answerDesc: \"NMR spectrometer provides accurate and non-destructive method of determining structure in soluble chemical compounds.\"\n            },\n            {\n                questionTitle: \"NMR spectroscopy indicates the chemical nature of the __________ and spatial positions of________\",\n                choicesList: [\n                    \"Protons,Neutrons\",\n                    \"Nuclues,Electrons\",\n                    \"Nucleus,Neighbouring Nuclei\"\n                ],\n                answersList: [2],\n                choiceType: ChoiceType.sn,\n                answerDesc: \"NMR spectroscopy indicates the chemical nature of the nuclei and spatial positions of neighbouring nuclei.\"\n            },\n            {\n                questionTitle: \"In NMR spectroscopy, the spinning nuclei in strong magnetic field must be irradiated by which of the following?\",\n                choicesList: [\n                    \"Perpendicular and strong field\",\n                    \"Perpendicular and weak field\",\n                    \"Parallel and strong field\"\n                ],\n                answersList: [1],\n                choiceType: ChoiceType.sn,\n                answerDesc: \"Theory\"\n            },\n            {\n                questionTitle: \"Elementary particles such as electrons and nucleus have the property of spin.\",\n                choicesList: [\n                    \"True\",\n                    \"Flase\",\n                    \"None of the above\"\n                ],\n                answersList: [0],\n                choiceType: ChoiceType.sn,\n                answerDesc: \"Theory\"\n            },\n            {\n                questionTitle: \"The difference between the field necessary for resonance in the sample and in some arbitrary chosen compound is which of the following?\",\n                choicesList: [\n                    \"Resonanace Shift\",\n                    \"Chemical Shift\",\n                    \"Matrix effect\"\n                ],\n                answersList: [1],\n                choiceType: ChoiceType.sn,\n                answerDesc: \"Theory\"\n            },\n            {\n                questionTitle: \"What are the units of chemical shift?\",\n                choicesList: [\n                    \"ppm\",\n                    \"km\",\n                    \"m/sec\"\n                ],\n                answersList: [0],\n                choiceType: ChoiceType.sn,\n                answerDesc: \"Theory\"\n            },\n            {\n                questionTitle: \"O2 has which spin?\",\n                choicesList: [\n                    \"Integral\",\n                    \"Half Integral\",\n                    \"Zero\"\n                ],\n                answersList: [2],\n                choiceType: ChoiceType.sn,\n                answerDesc: \"Number of protons=Number of Neutrons\"\n            },\n            {\n                questionTitle: \"The amount of energy available in radio frequency radiation is sufficient for which of the following?\",\n                choicesList: [\n                    \"Excite an atom\",\n                    \"Vibrate an atom\",\n                    \"Affect the nuclear spin of an atom\"\n                ],\n                answersList: [2],\n                choiceType: ChoiceType.sn,\n                answerDesc: \"The amount of energy available in radio frequency radiation is sufficient for affecting the nuclear spin of an atom. It constitute the most fundamental part of spectroscopy.\"\n            },\n            {\n                questionTitle: \"Which waves does NMR use for detection of structure of substances?\",\n                choicesList: [\n                    \"Microwaves\",\n                    \"UV radiation\",\n                    \"Radio Waves\"\n                ],\n                answersList: [2],\n                choiceType: ChoiceType.sn,\n                answerDesc: \"As radio waves are the lowest form of EM waves, they are used in NMR.\"\n            },\n            {\n                questionTitle: \"When energy is absorbed by the sample, the absorption can be observed as a change in signal developed by which of the following components?\",\n                choicesList: [\n                    \"Amplifier\",\n                    \"Radio frequency Detector\",\n                    \"Photon Detector\"\n                ],\n                answersList: [1],\n                choiceType: ChoiceType.sn,\n                answerDesc: \"When energy is absorbed by the sample, the absorption can be observed as a change in signal developed by radiofrequency detector. It is then given to an amplifier.\"\n            },\n            {\n                questionTitle: \"What is the formula of acetaldehyde?\",\n                choicesList: [\n                    \"C2H4O\",\n                    \"C3H6O\",\n                    \"C7H6O\"\n                ],\n                answersList: [0],\n                choiceType: ChoiceType.sn,\n                answerDesc: \"Theory\"\n            },\n            {\n                questionTitle: \"What are the units on X-axis of the graph in the experiment?\",\n                choicesList: [\n                    \"Hz\",\n                    \"ppm\",\n                    \"m\"\n                ],\n                answersList: [1],\n                choiceType: ChoiceType.sn,\n                answerDesc: \"Theory\"\n            },\n        ]\n    }\n}\n","import React from 'react'\nimport PropTypes from \"prop-types\";\n\nimport { Card, Progress} from 'antd';\n\nimport './quizeCategory.css'\n\nconst { Meta } = Card;\n\nfunction QuizeCategory(props) {\n    const { title, imageUrl, numberOfQuizes, onSelected , className} = props\n\n    return (\n        <Card\n            style={{ width: 300 }}\n            cover={\n                <img\n                    src={imageUrl}\n                    alt=\"Quize Image\"\n                    className = \"quize-general-info-image\"\n                />\n            }\n            className = {\"general-info-wrapper \" + className}\n            hoverable\n            onClick = {onSelected}\n        >\n            <Meta\n                title={title}\n                description= {numberOfQuizes +  \" Quizzes\"}\n            />\n            <Progress percent = {23}/>\n        </Card>\n\n)\n}\n\nQuizeCategory.propTypes = {\n    title: PropTypes.string,\n    imageUrl: PropTypes.string,\n    numberOfQuizes: PropTypes.number,\n    onSelected: PropTypes.func,\n    className: PropTypes.string\n}\n\nexport default QuizeCategory","import React from 'react'\nimport { PageHeader, Typography } from 'antd';\nimport QuizeCategory from '../Components/QuizeGeneralInfo/QuizeCategory';\n\nconst {Title} = Typography;\nfunction QuizzesList(props) {\n    const imgUrl = \"https://i.udemycdn.com/course/480x270/1362070_b9a1_2.jpg\"\n\n    return (\n        <div>\n\n            <PageHeader\n                style={{\n                    border: '1px solid rgb(235, 237, 240)',\n                }}\n                title=\"Henok Quizzes\"\n            />\n            <div className=\"quizzes-list-wrapper\">\n                <Title level = {4}>15 Quizes</Title>\n                {\n                    [1, 2, 3, 4, 5, 6, 7, 8].map(element =>\n                        <QuizeCategory\n                            title={\"Chemistry Quize \" + element}\n                            key={element}\n                            numberOfQuizes ={23}\n                            imageUrl={imgUrl}\n                            className=\"quize-card-wrapper\"\n                        />\n\n                    )\n                }\n\n            </div>\n        </div>\n\n    )\n}\n\nexport default QuizzesList\n\n","import React, { Component } from 'react';\nimport './App.css';\n\nimport QuizeBody from './Components/QuizeBody/QuizeBody'\nimport Header from './Components/Header'\nimport quizes from './Models/Questions'\nimport QuizeCategory from './Components/QuizeGeneralInfo/QuizeCategory';\nimport QuizzesList from './pages/quizzeses';\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      currentIndex: 0,\n      correct: 0,\n      wrong: 0\n    }\n\n    this.onAQuestionFinished = this.onAQuestionFinished.bind(this)\n\n    this.quize = quizes[\"quize\"]\n  }\n\n  onSelected(index) {\n    console.log('I am selected')\n  }\n\n  onAQuestionFinished(isCorrect) {\n    console.log(isCorrect)\n    const updateField = isCorrect ? 'correct' : 'wrong'\n    if (this.state.currentIndex === this.quize.questions.length){\n      console.log(\"Quize Finished!\")\n      return\n    }\n    this.setState(\n      (state) => ({\n        currentIndex: state.currentIndex + 1,\n        [updateField]: state[updateField] + 1\n      }),\n      () => {\n        console.log(this.state)\n      }\n    )\n\n  }\n\n  render() {\n    const {currentIndex,correct, wrong} = this.state\n    const currentQuestion =  this.quize.questions[currentIndex]\n\n\n    return (\n      <div className=\"App\">\n        <QuizzesList/>\n        {/* <Header\n          quizeTitle={this.quize.title}\n          currentQuestionNumber={currentIndex + 1}\n          totalNumberOfQuestions={this.quize.questions.length} \n          correctAnswersCount = {correct}\n          wrongAnswersCount = {wrong}\n          />\n\n        <QuizeBody\n          index={currentIndex}\n          onAQuestionFinished={this.onAQuestionFinished}\n          question={currentQuestion} /> */}\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}